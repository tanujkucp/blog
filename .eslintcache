[{"/home/tanuj/WebstormProjects/blogs/src/reportWebVitals.js":"1","/home/tanuj/WebstormProjects/blogs/src/Home.js":"2","/home/tanuj/WebstormProjects/blogs/src/index.js":"3","/home/tanuj/WebstormProjects/blogs/src/widgets/Header.js":"4","/home/tanuj/WebstormProjects/blogs/src/widgets/Footer.js":"5","/home/tanuj/WebstormProjects/blogs/src/Signup.js":"6","/home/tanuj/WebstormProjects/blogs/src/TagPage.js":"7","/home/tanuj/WebstormProjects/blogs/src/Publish.js":"8","/home/tanuj/WebstormProjects/blogs/src/widgets/WaveBorder.js":"9","/home/tanuj/WebstormProjects/blogs/src/widgets/PostCard.js":"10","/home/tanuj/WebstormProjects/blogs/src/Profile.js":"11","/home/tanuj/WebstormProjects/blogs/src/Login.js":"12","/home/tanuj/WebstormProjects/blogs/src/widgets/ProfileCard.js":"13","/home/tanuj/WebstormProjects/blogs/src/BlogPostPage.js":"14","/home/tanuj/WebstormProjects/blogs/src/widgets/BlogPost.js":"15"},{"size":362,"mtime":1609911338480,"results":"16","hashOfConfig":"17"},{"size":3465,"mtime":1609950061019,"results":"18","hashOfConfig":"17"},{"size":1669,"mtime":1609918685232,"results":"19","hashOfConfig":"17"},{"size":2090,"mtime":1609951792695,"results":"20","hashOfConfig":"17"},{"size":930,"mtime":1609917983328,"results":"21","hashOfConfig":"17"},{"size":8542,"mtime":1609941869040,"results":"22","hashOfConfig":"17"},{"size":4342,"mtime":1609954569581,"results":"23","hashOfConfig":"17"},{"size":10242,"mtime":1609947658910,"results":"24","hashOfConfig":"17"},{"size":1984,"mtime":1609921283504,"results":"25","hashOfConfig":"17"},{"size":3375,"mtime":1609950652125,"results":"26","hashOfConfig":"17"},{"size":5107,"mtime":1609953725523,"results":"27","hashOfConfig":"17"},{"size":6420,"mtime":1609945248474,"results":"28","hashOfConfig":"17"},{"size":2756,"mtime":1609927521908,"results":"29","hashOfConfig":"17"},{"size":2535,"mtime":1609955254470,"results":"30","hashOfConfig":"17"},{"size":2286,"mtime":1609956187141,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"37egpg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tanuj/WebstormProjects/blogs/src/reportWebVitals.js",[],["66","67"],"/home/tanuj/WebstormProjects/blogs/src/Home.js",[],"/home/tanuj/WebstormProjects/blogs/src/index.js",[],["68","69"],"/home/tanuj/WebstormProjects/blogs/src/widgets/Header.js",[],"/home/tanuj/WebstormProjects/blogs/src/widgets/Footer.js",["70"],"import React from 'react';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Link from \"@material-ui/core/Link/Link\";\nimport configs from \"./../config\";\nimport TelegramIcon from '@material-ui/icons/Telegram';\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" align=\"center\" style={{color: '#d0d0d0'}}>\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href={configs.website_address}>\n                {configs.website_name}\n            </Link>{' '}\n            {new Date().getFullYear()}\n\n        </Typography>\n    );\n}\n\nexport default function Footer() {\n    return (\n        <footer style={{backgroundColor: 'rgb(36, 40, 44)', padding: 10}}>\n\n            <Typography variant=\"h5\" align=\"center\" style={{color: 'white'}} component=\"p\">\n                A short Blog App for CoFoundersTown\n            </Typography>\n\n            <Copyright/>\n        </footer>\n    );\n\n}\n\n","/home/tanuj/WebstormProjects/blogs/src/Signup.js",["71"],"/home/tanuj/WebstormProjects/blogs/src/TagPage.js",["72"],"/home/tanuj/WebstormProjects/blogs/src/Publish.js",["73","74"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {makeStyles} from '@material-ui/core/styles';\nimport configs from './config.json';\nimport Footer from './widgets/Footer';\nimport Header from './widgets/Header';\nimport WaveBorder from \"./widgets/WaveBorder\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport Chip from \"@material-ui/core/Chip\";\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport PostCard from \"./widgets/PostCard\";\nimport {Redirect} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        justifyContent: 'center'\n    },\n    waveBorder: {\n        paddingTop: theme.spacing(4),\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifySelf: 'center',\n        paddingTop: 10,\n        marginTop: 10\n    },\n    form: {\n        width: '90%', // Fix IE 11 issue.\n        paddingBottom: 10\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n}));\n\nfunction Publish() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [response, setResponse] = useState([]);\n    const [post, setPost] = useState({title: '', body: '', image: '', tags: []});\n    const [error, setError] = useState();\n    const [info, setInfo] = useState();\n    const [savedUser, setSavedUser] = useState(null);\n    const [redirect, setRedirect] = useState();\n    const [jwt, setJWT]= useState();\n\n    const handleChange = (event) => {\n        let newPost = {\n            ...post,\n            [event.target.name]: event.target.value\n        };\n        setPost(newPost);\n    };\n\n    //store data to server\n    const savePost = () => {\n        setLoading(true);\n        //add JWT to request and send to server\n        axios.post(configs.server_address + \"/publish\", post, {\n            headers: {\n                Authorization: `Bearer ${jwt}`\n            }\n        }).then((res) => {\n                if (res.data.success) {\n                    //show success message\n                    setInfo('New blog post created!');\n                    //redirect to home page\n                    setTimeout(()=> setRedirect('/'), 3000);\n                }\n                setLoading(false);\n            }).catch((err) => {\n            setLoading(false);\n            console.log(err);\n            if (err.response) setError(err.response.data.message);\n        });\n    };\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n    const tagOptions = ['science', 'lifestyle', 'social', 'economy'];\n    useEffect(() => {\n        const username = localStorage.getItem('username');\n        setSavedUser(username);\n        //get JWT from local storage\n        const jwt = localStorage.getItem('jwt');\n        if (jwt == null) {\n            //redirect to home page\n            setTimeout(() => setRedirect('/'), 1000);\n        }else setJWT(jwt);\n    }, []);\n\n    if (redirect) {\n        return <Redirect to={redirect}/>\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n\n            <Header user={savedUser}/>\n            {loading ? (<LinearProgress variant=\"query\" color=\"secondary\"/>) : (null)}\n            <main style={{backgroundColor: \"#cfd8dc\"}}>\n                <Snackbar open={error} autoHideDuration={5000} onClose={() => setError(null)}>\n                    <Alert severity=\"error\" onClose={() => setError(null)}>\n                        {error}\n                    </Alert>\n                </Snackbar>\n                <Snackbar open={info} autoHideDuration={5000} onClose={() => setInfo(null)}>\n                    <Alert severity=\"success\" onClose={() => setInfo(null)}>\n                        {info}\n                    </Alert>\n                </Snackbar>\n\n                <Container className={classes.cardGrid} maxWidth=\"sm\">\n                    {/*Preview of post*/}\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Preview\n                    </Typography>\n                    <PostCard post={{...post, created_at: Date.now()}} key={post.title}/>\n\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <PostAddIcon/>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Create a Blog Post\n                        </Typography>\n                        <form className={classes.form} noValidate>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        value={post.title}\n                                        name={'title'}\n                                        label=\"Post Title\"\n                                        onChange={handleChange}\n                                        fullWidth\n                                        autoFocus\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        value={post.image}\n                                        name={'image'}\n                                        label=\"Banner image link\"\n                                        onChange={handleChange}\n                                        fullWidth\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <FormControl className={classes.formControl} fullWidth>\n                                        <InputLabel>Add Some Tags</InputLabel>\n                                        <Select\n                                            multiple\n                                            value={post.tags}\n                                            name={'tags'}\n                                            onChange={handleChange}\n                                            input={<Input id=\"select-multiple-chip\"/>}\n                                            renderValue={(selected) => (\n                                                <div className={classes.chips}>\n                                                    {selected.map((value) => (\n                                                        <Chip icon={<LocalOfferIcon/>} key={value} label={value}\n                                                              className={classes.chip}/>\n                                                    ))}\n                                                </div>\n                                            )}\n                                            MenuProps={MenuProps}\n                                        >\n                                            {tagOptions.map((name) => (\n                                                <MenuItem key={name} value={name}>\n                                                    {name}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Body of your post\"\n                                        multiline\n                                        required\n                                        rowsMax={15}\n                                        variant=\"outlined\"\n                                        value={post.body}\n                                        name={'body'}\n                                        onChange={handleChange}\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={savePost}\n                            >\n                                Publish Blog Post\n                            </Button>\n\n                        </form>\n                    </Paper>\n                </Container>\n\n            </main>\n\n            {/* Footer */}\n            <WaveBorder\n                upperColor=\"#cfd8dc\"\n                lowerColor={'rgb(36, 40, 44)'}\n                animationNegativeDelay={4}\n            />\n            <Footer/>\n            {/* End footer */}\n\n        </React.Fragment>\n    );\n}\n\nexport default Publish;\n","/home/tanuj/WebstormProjects/blogs/src/widgets/WaveBorder.js",[],"/home/tanuj/WebstormProjects/blogs/src/widgets/PostCard.js",[],"/home/tanuj/WebstormProjects/blogs/src/Profile.js",["75","76"],"/home/tanuj/WebstormProjects/blogs/src/Login.js",[],"/home/tanuj/WebstormProjects/blogs/src/widgets/ProfileCard.js",[],"/home/tanuj/WebstormProjects/blogs/src/BlogPostPage.js",["77","78"],"/home/tanuj/WebstormProjects/blogs/src/widgets/BlogPost.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":20},{"ruleId":"85","severity":1,"message":"89","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":64,"column":8,"nodeType":"92","endLine":64,"endColumn":10,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"94","line":70,"column":12,"nodeType":"87","messageId":"88","endLine":70,"endColumn":20},{"ruleId":"85","severity":1,"message":"95","line":70,"column":22,"nodeType":"87","messageId":"88","endLine":70,"endColumn":33},{"ruleId":"85","severity":1,"message":"96","line":18,"column":8,"nodeType":"87","messageId":"88","endLine":18,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":94,"column":8,"nodeType":"92","endLine":94,"endColumn":10,"suggestions":"97"},{"ruleId":"85","severity":1,"message":"98","line":10,"column":8,"nodeType":"87","messageId":"88","endLine":10,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":50,"column":8,"nodeType":"92","endLine":50,"endColumn":10,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"no-unused-vars","'TelegramIcon' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'Login' is defined but never used.",["103"],"'back_image' is defined but never used.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},{"desc":"105","fix":"108"},"Update the dependencies array to be: [loadData]",{"range":"109","text":"110"},{"range":"111","text":"110"},{"range":"112","text":"110"},[1918,1920],"[loadData]",[3026,3028],[1495,1497]]